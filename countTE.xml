<tool id="countTE" name="countTE" version="1.0.0" hidden="false">
    <description>fastq quality trimming</description>
    <version_command interpreter="python3">countTE.py -version</version_command>
    <command interpreter="python3">${__root_dir__}/tools/pi_galaxy/countTE.py
        -rosette $rosette_file
        -column $count_column
        -TE_fasta $fasta_file
        -MAPQ $MAPQ
        -count $output_file
        #if $type_of_input['condition'] == "fastq":
            -RNA
            #for $file in $type_of_input['fastq_files']:
                $file['fastq_file']
            #end for
            #if $type_of_input['qc_step'] == "run_qc":
                -QC
            #end if
            #if $type_of_input['mapper'] == "bowtie2":
                -bowtie2
            #end if
        #end if
        #if $type_of_input['condition'] == "fastq_pair":
            -RNA
            #for $file in $type_of_input['fastq_files']:
                $file['fastq_file']
            #end for
            -RNApair
            #for $file in $type_of_input['fastq_files_pair']:
                $file['fastq_file_pair']
            #end for
            #if $type_of_input['qc_step'] == "run_qc":
                -QC
            #end if
            #if $type_of_input['type_of_mapper']['mapper'] == "bowtie2":
                -bowtie2
                -insert $type_of_input['type_of_mapper']['insert_size']
            #end if
        #end if
        #if $type_of_input['condition'] == "sam_file":
            -sam
            #for $fastq in $type_of_input['sam_files']:
                $fastq['sam_file']
            #end for
        #end if
        #if $count_sirna==True:
            -count_sirna $output_sirna_file
        #end if
    </command>

    <inputs>
        <param name="rosette_file" type="data" format="tabular" label="rosette file. Each column correspond to a variable and the first one to the TE copy names" />
        <param name="count_column" type="integer" value="2" label="rosette file column to count"/>
        <param name="fasta_file" type="data" format="fasta" label="list of TE copies in fasta format" />
        <conditional name="type_of_input">
            <param name="condition" type="select" label="input data type">
                <option value="fastq">fastq</option>
                <option value="fastq_pair">fastq paired</option>
                <option value="sam_file">sam</option>
            </param>
            <when value="fastq">
                <repeat name="fastq_files" title="fastq file">
                     <param name="fastq_file" type="data" format="fastq" label="fastq file"/>
                </repeat>
                <param name="qc_step" type="boolean" checked="false" truevalue="run_qc" falsevalue="skip_qc" label="Run UrQt quality trimmer on the data"/>
                <param name="mapper" type="select" label="Mapper to use: bowtie (smallRNASeq) or bowtie2 (RNASeq)">
                    <option value="bowtie">bowtie</option>
                    <option value="bowtie2">bowtie2</option>
                </param>
            </when>
            <when value="fastq_pair">
                <repeat name="fastq_files" title="fastq file">
                     <param name="fastq_file" type="data" format="fastq" label="fastq file"/>
                </repeat>
                <repeat name="fastq_files_pair" title="fastq pair file">
                     <param name="fastq_file_pair" type="data" format="fastq" label="fastq file"/>
                </repeat>
                <param name="qc_step" type="boolean" checked="false" truevalue="run_qc" falsevalue="skip_qc" label="Run UrQt quality trimmer on the data"/>
                <conditional name="type_of_mapper">
                    <param name="mapper" type="select" label="Mapper to use: bowtie (smallRNASeq) or bowtie2 (RNASeq)">
                        <option value="bowtie">bowtie</option>
                        <option value="bowtie2">bowtie2</option>
                    </param>
                    <when value="bowtie"/>
                    <when value="bowtie2">
                        <param name="insert_size" type="integer" value="500"  min="0" label="insert site for the paired-end library"/>
                    </when>
                </conditional>
            </when>
            <when value="sam_file">
                <repeat name="sam_files" title="sam file">
                     <param name="sam_file" type="data" format="sam" label="sam alignement file if the reads where already mapped on the list of TE copies"/>
                </repeat>
            </when>
        </conditional>
        <param name="MAPQ" type="integer" value="255" min="0" max="255" label="maximum MAPQ mapping quality value to count a read as mapped (the lower the number the better the quality)"/>
       <param name="count_sirna" type="boolean" checked="false" truevalue="count" falsevalue="do_not_count" label="count siRNA (21pb reads) in a different file"/>


    </inputs>

    <outputs>
        <data format="tabular" name="output_file" label="${tool.name} on ${on_string}: reads count table">
            <discover_datasets pattern="__designation_and_ext__" directory="alignment" visible="true" />
        </data>
        <data format="tabular" name="output_sirna_file" label="${tool.name} on ${on_string}: reads count table for siRNA">
            <filter>(count_sirna==True)</filter>
        </data>
    </outputs>

    <requirements>
        <requirement type="package">python3</requirement>
        <requirement type="package">nice</requirement>
    </requirements>

    <help>
countTE documentation:
======================

Count reads mapping to transposable element (TE) sequences contained in a **fasta file**.

The correspondance between TE copy and TE family is given in a **rosette tabular text file** of the following form:

rosette file example:
---------------------------
    ACCORD_I        ACCORD  Gyspy                   LTR-Retrotransposon
    
    ACCORD_LTR      ACCORD  Gyspy                   LTR-Retrotransposon
    
    ACCORD2         ACCORD2 Gypsy                   LTR-Retrotransposon
    
    ACCORD2_I       ACCORD2 Gyspy                   LTR-Retrotransposon
    
    ACCORD2_LTR     ACCORD2 Gypsy                   LTR-Retrotransposon
    
    ARS406_DM       ARS406  Origin-of-replication   Repetitive-sequence

The **rosette file** can contain *any number of column* as long as the first column correspond to the **name** of the TE sequences in the fasta file (>**name** some other information).

The **count column** then define the variable on which to count mapped reads.
For example, with the default value of 2, and the rosette file example above we are counting mapped reads by TE families and with a value of 3 we are counting mapped reads by TE super-families.

NGS data-sets
-------------------

The NGS data set can be of two types:
1. fastq sequence files
2. sam alignement files

1. **fastq files**

You can add any number of **fastq files** to map on the **fasta file**
In the case of paired-end data you must add the same number of paired **fastq files**.

When **fastq files** are provided **countTE** index the **fasta file** then map the reads using **bowtie** or **bowtie2**.
For smallRNA sequencing data **bowtie** seems to perform beter than bowtie2.
When using RNA sequencing data we recomand to use **bowtie2** and to specify the correct insert site used to build the library.

**counTE** output the **sam alignment files** corresponding to each **fastq file** or pair of **fastq files** in the case of paired-end data.

2. **sam files**

**countTE** can work directly on **sam file** which allows to quickly count mapped reads according to different columns of the rosette file


output file
-----------------
**countTE** always report a **tabular text count file**.

The first columns correspond to the columns of the **rosette file** without the column corresponding to the **name** of the TE sequences and with the **count column** in first position.

The following columns correspond to the mapping reads counts for each **fastq file** or **sam file** and the last column corresponds to the total of these counts.
    </help>
</tool>
